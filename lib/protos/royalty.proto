/**
 * Royalty Message.
 *
*/

syntax = "proto3";
package mscm;

import "artist.proto";
import "company.proto";
import "recording.proto";
import "release.proto";
import "uuid.proto";

message Royalty {
  enum Type {
    TYPE_UNSPECIFIED = 0;
    TYPE_SALE = 1;
    TYPE_REFUND = 2;
  }
  UUID uuid = 1; /// UUID.
  string pay_period = 2; /// Pay Period of the Royalty record - usually decided by the user; however a standardized way can be used as such: 2020-01 | 2020-Q1 | 2020-H1.
  string sale_date = 3; /// The actual sale date of the transaction that created this Royalty Record or the Date that this Royalty Record was recorded by the retailer - USE ISO 8601 for date representations.
  string retailer = 4; /// The retailer of this Royalty.
  string sub_retailer = 5; /// The sub retailer of this Royalty.
  string album_artist_name = 6; ///  The Album Artist name.
  string album_title = 7; /// The Album title.
  string upc = 8; /// The Album UPC / Barcode.
  string catalogue_number = 9; /// The Album catalogue number.
  string recording_artist_name = 10; ///
  string recording_title = 11; ///
  string isrc = 12; ///
  string cat_no = 13; ///
  string label_name = 14; ///
  string asset_type = 15; ///
  Type revenue_type = 16; ///
  string revenue_description = 17; ///
  int32 quantity = 18; ///
  string total_sales_revenue = 19; /// 
  string total_deductions = 20; ///
  string total_net_revenue = 21; /// The Net revenue amount.
  /// Payees, Companies, paid etc need sorting
  bool source_company_paid = 22; ///
  bool recipient_company_paid = 23; ///
  Artist album_artist = 24; /// Link to an Artist resource
  Artist recording_artist = 25; /// Link to an Artist resource
  Company source_company = 26;
  Company recipient_company = 27;
  Release release = 28;
  // Asset asset = 29;
  Recording recording = 30;
}
